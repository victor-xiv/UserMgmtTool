package com.orionhealth.com_orchestral_portal_webservice_api_7_2_user;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

import ldap.LdapProperty;
import ldap.UserMgmtConstants;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2014-08-15T15:32:43.474+12:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "UserManagementService", 
                  wsdlLocation = "https://192.168.21.69/portal/ws/com.orchestral.portal.webservice.api_7_2.user.UserManagementService?wsdl",
                  targetNamespace = "http://www.orionhealth.com/com.orchestral.portal.webservice.api_7_2.user/") 
public class UserManagementService extends Service {
	
    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.orionhealth.com/com.orchestral.portal.webservice.api_7_2.user/", "UserManagementService");
    public final static QName ComOrchestralPortalWebserviceApi72UserUserManagementServicePort = new QName("http://www.orionhealth.com/com.orchestral.portal.webservice.api_7_2.user/", "com.orchestral.portal.webservice.api_7_2.user.UserManagementServicePort");
    static {
        URL url = UserManagementService.class.getResource(LdapProperty.getProperty(UserMgmtConstants.CONCERTO_WSDL_URL));
        if (url == null) {
            url = UserManagementService.class.getClassLoader().getResource(LdapProperty.getProperty(UserMgmtConstants.CONCERTO_WSDL_URL));
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(UserManagementService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", LdapProperty.getProperty(UserMgmtConstants.CONCERTO_WSDL_URL));
        }       
        WSDL_LOCATION = url;
    }

    public UserManagementService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UserManagementService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserManagementService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public UserManagementService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public UserManagementService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public UserManagementService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns ComOrchestralPortalWebserviceApi72UserUserManagementService
     */
    @WebEndpoint(name = "com.orchestral.portal.webservice.api_7_2.user.UserManagementServicePort")
    public ComOrchestralPortalWebserviceApi72UserUserManagementService getComOrchestralPortalWebserviceApi72UserUserManagementServicePort() {
        return super.getPort(ComOrchestralPortalWebserviceApi72UserUserManagementServicePort, ComOrchestralPortalWebserviceApi72UserUserManagementService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ComOrchestralPortalWebserviceApi72UserUserManagementService
     */
    @WebEndpoint(name = "com.orchestral.portal.webservice.api_7_2.user.UserManagementServicePort")
    public ComOrchestralPortalWebserviceApi72UserUserManagementService getComOrchestralPortalWebserviceApi72UserUserManagementServicePort(WebServiceFeature... features) {
        return super.getPort(ComOrchestralPortalWebserviceApi72UserUserManagementServicePort, ComOrchestralPortalWebserviceApi72UserUserManagementService.class, features);
    }

}
